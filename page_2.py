# import streamlit as st
# import graphviz

# st.title("Preprocessing et feature engineering")

# def affiche():

#     st.subheader("1. üîç Retraitement initial")

#     st.markdown('***DVF g√©olocalis√©***')

#     st.markdown('''
                
#     * Suppression des lignes inexploitables
#     * Restrictions du p√©rim√®tre d'√©tude aux seules ventes
#     * Renseignement des valeurs manquantes des types de locaux
#     * Cr√©ation de variables pour √©tudier les ventes comportant de multiples biens ou parcelles
#     * P√©rim√®tre restreint aux transactions comportant au maximum 2 lignes (1 bien immobilier et 1 annexe dans la m√™me commune)                        
#     * Conservation des lignes relatives aux ventes :
#         * d'appartements
#         * de maisons
#         * de locaux commerciaux, industriels ou assimil√©s

#     ‚û°Ô∏è R√©sultat : 84 613 observations conserv√©es.

#     * Traitement des valeurs manquantes (suppression ou recherche de la donn√©e notamment en termes de g√©olocalisation (Geocoding par API))
    
#     ‚û°Ô∏è R√©sultat : Aucune valeur manquante √† l'issue des retraitements

#     * Traitement des valeurs extr√™mes ou aberrantes''')

#     st.markdown('***Autres bases***')

#     st.markdown('**BDNB, Filosofi, IRIS, D√©linquance, Densit√© de population, Indicateurs immobiliers**')
                
#     st.markdown('''
                
#         * Traitement √©ventuel des valeurs manquantes
#         * Pr√©-s√©lection de variables''')

#     st.markdown('**BPE, OpenStreetMap, Transports**')
                
#     st.markdown('''
                
#         * Restriction du p√©rim√®tre g√©ographique √† la Gironde
#         * Cr√©ation d'une base unique regroupant tous ces √©l√©ments
#         * Traitement des doublons
#         * Cr√©ation de cat√©gories pour limiter le nombre de variables''')    

#     st.subheader("2. üî¨ Consitution de la base finale")

#     st.markdown('''
                
#         * Rapprochement de toutes les bases pr√©c√©demment cit√©es
#         * Traitement des valeurs manquantes lors du croisement des bases
#         * Suppression de certaines variables
#         * Calcul du nombre de points d'int√©r√™t par cat√©gorie avec 4 groupes de distance (50 m√®tres, 500 m√®tres, 2 et 10 kilom√®tres)
#         * D√©termination de la distance du point d'int√©r√™t le plus proche pour chaque cat√©gorie
#         * √âvolution des variables (une fois les premi√®res simulations lanc√©es pour am√©liorer les r√©sultats du mod√®le) :
#                 * Cr√©ation de nouvelles variables plus faciles √† interpr√©ter
#                 * D√©coupage de variables en tranches pour faciliter l'exploitation des r√©sultats par le mod√®le''')  

import streamlit as st

# --- En-t√™te
st.set_page_config(page_title="Pr√©processing et Feature Engineering", layout="wide")

# --- Fonction principale
def affiche():

    st.title("‚öôÔ∏è Preprocessing et Feature Engineering")

    # ============================================================
    # üßπ 1. Retraitement initial
    # ============================================================
    st.markdown("## üîç 1. Retraitement initial")

    with st.container():
        st.markdown("### üè† **Base DVF g√©olocalis√©e**")

        st.info('''
     * Conversion des donn√©es dans les types attendus
     * Suppression des lignes inexploitables
     * Restrictions du p√©rim√®tre d'√©tude aux seules ventes
     * Renseignement des valeurs manquantes des types de locaux
     * Cr√©ation de variables pour √©tudier les ventes comportant de multiples biens ou parcelles
     * P√©rim√®tre restreint aux transactions comportant au maximum 2 lignes (1 bien immobilier et 1 annexe dans la m√™me commune)                        
     * Conservation des lignes relatives aux ventes :
         * d'appartements
         * de maisons
         * de locaux commerciaux, industriels ou assimil√©s

     ‚û°Ô∏è R√©sultat : 84 613 observations conserv√©es.

     * Traitement des valeurs manquantes (suppression ou recherche de la donn√©e notamment en termes de g√©olocalisation (Geocoding par API))
    
     ‚û°Ô∏è R√©sultat : Aucune valeur manquante √† l'issue des retraitements

     * Traitement des valeurs extr√™mes ou aberrantes

        ‚úÖ **Aucune valeur manquante** √† l‚Äôissue des retraitements.
        ''')

    # --- Autres bases
    with st.container():
        st.markdown("### üßæ **Autres bases compl√©mentaires**")

        st.markdown("**BDNB, Filosofi, IRIS, D√©linquance, Densit√©, Indicateurs immobiliers**")
        st.info("""
        - Conversion des donn√©es dans les types attendus
        - Traitement √©ventuel des valeurs manquantes
        - Pr√©-s√©lection de variables pertinentes
        """)

        st.markdown("**BPE, OpenStreetMap, Transports**")
        st.info("""
        - CConversion des donn√©es dans les types attendus
        - Restriction du p√©rim√®tre g√©ographique √† la **Gironde**  
        - Fusion des diff√©rentes sources dans une base unique  
        - Suppression des doublons  
        - Cr√©ation de **cat√©gories agr√©g√©es** pour r√©duire la dimensionnalit√©
        """)

    # ============================================================
    # üß¨ 2. Constitution de la base finale
    # ============================================================
    st.markdown("## üß¨ 2. Constitution de la base finale")

    st.success('''
        * Rapprochement de toutes les bases pr√©c√©demment cit√©es
        * Traitement des valeurs manquantes lors du croisement des bases
        * Suppression de certaines variables
        * Calcul du nombre de points d'int√©r√™t par cat√©gorie avec 4 groupes de distance (50 m√®tres, 500 m√®tres, 2 et 10 kilom√®tres)
        * D√©termination de la distance du point d'int√©r√™t le plus proche pour chaque cat√©gorie
        * √âvolution des variables (une fois les premi√®res simulations lanc√©es) :
            * Cr√©ation de nouvelles variables plus faciles √† interpr√©ter
            * D√©coupage de variables en tranches pour faciliter l'exploitation des r√©sultats par le mod√®le''')  